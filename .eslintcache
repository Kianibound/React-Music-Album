[{"E:\\WEB Practices\\React\\React-Music Player\\music-app\\src\\index.js":"1","E:\\WEB Practices\\React\\React-Music Player\\music-app\\src\\reportWebVitals.js":"2","E:\\WEB Practices\\React\\React-Music Player\\music-app\\src\\App.js":"3","E:\\WEB Practices\\React\\React-Music Player\\music-app\\src\\components\\Song.js":"4","E:\\WEB Practices\\React\\React-Music Player\\music-app\\src\\components\\Player.js":"5","E:\\WEB Practices\\React\\React-Music Player\\music-app\\src\\components\\data.js":"6","E:\\WEB Practices\\React\\React-Music Player\\music-app\\src\\components\\library.js":"7","E:\\WEB Practices\\React\\React-Music Player\\music-app\\src\\components\\nav.js":"8","E:\\WEB Practices\\React\\React-Music Player\\music-app\\src\\components\\librarySong.js":"9"},{"size":472,"mtime":1607977988224,"results":"10","hashOfConfig":"11"},{"size":362,"mtime":499162500000,"results":"12","hashOfConfig":"11"},{"size":1987,"mtime":1608145178434,"results":"13","hashOfConfig":"11"},{"size":265,"mtime":1607986375095,"results":"14","hashOfConfig":"11"},{"size":3003,"mtime":1608146072911,"results":"15","hashOfConfig":"11"},{"size":3614,"mtime":1608139468448,"results":"16","hashOfConfig":"11"},{"size":729,"mtime":1608070406578,"results":"17","hashOfConfig":"11"},{"size":483,"mtime":1608070212778,"results":"18","hashOfConfig":"11"},{"size":966,"mtime":1608144068699,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"9acsli",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"22"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40"},"E:\\WEB Practices\\React\\React-Music Player\\music-app\\src\\index.js",[],["41","42"],"E:\\WEB Practices\\React\\React-Music Player\\music-app\\src\\reportWebVitals.js",[],"E:\\WEB Practices\\React\\React-Music Player\\music-app\\src\\App.js",[],"E:\\WEB Practices\\React\\React-Music Player\\music-app\\src\\components\\Song.js",["43"],"import React from 'react'\r\n\r\nconst Song = ({ currentSong }) => {\r\n  return (\r\n    <div className='song'>\r\n      <img src={currentSong.cover}></img>\r\n      <h2>{currentSong.name}</h2>\r\n      <h3>{currentSong.artists}</h3>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Song\r\n","E:\\WEB Practices\\React\\React-Music Player\\music-app\\src\\components\\Player.js",[],"E:\\WEB Practices\\React\\React-Music Player\\music-app\\src\\components\\data.js",[],"E:\\WEB Practices\\React\\React-Music Player\\music-app\\src\\components\\library.js",[],"E:\\WEB Practices\\React\\React-Music Player\\music-app\\src\\components\\nav.js",[],"E:\\WEB Practices\\React\\React-Music Player\\music-app\\src\\components\\librarySong.js",["44"],"import React from 'react'\r\n\r\nconst LibrarySong = ({\r\n  song,\r\n  songs,\r\n  setCurrentSong,\r\n  audioRef,\r\n  isPlaying,\r\n  id,\r\n  setSongs,\r\n}) => {\r\n  const songSelectHandler = async () => {\r\n    const selectedSong = songs.filter((state) => state.id === id)\r\n    await setCurrentSong(selectedSong[0])\r\n    const newSongs = songs.map((song) => {\r\n      if (song.id === id) {\r\n        return {\r\n          ...song,\r\n          active: true,\r\n        }\r\n      } else {\r\n        return {\r\n          ...song,\r\n          active: false,\r\n        }\r\n      }\r\n    })\r\n    setSongs(newSongs)\r\n    if (isPlaying) audioRef.current.play()\r\n  }\r\n\r\n  return (\r\n    <div\r\n      onClick={songSelectHandler}\r\n      className={`library-song ${song.active ? 'selected' : ''}`}\r\n    >\r\n      <img src={song.cover}></img>\r\n      <div className='song-description'>\r\n        <h3>{song.name}</h3>\r\n        <h4>{song.artists}</h4>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default LibrarySong\r\n",{"ruleId":"45","replacedBy":"46"},{"ruleId":"47","replacedBy":"48"},{"ruleId":"49","severity":1,"message":"50","line":6,"column":7,"nodeType":"51","endLine":6,"endColumn":36},{"ruleId":"49","severity":1,"message":"50","line":37,"column":7,"nodeType":"51","endLine":37,"endColumn":29},"no-native-reassign",["52"],"no-negated-in-lhs",["53"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]